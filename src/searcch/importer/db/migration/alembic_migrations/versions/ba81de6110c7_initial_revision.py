"""initial revision

Revision ID: ba81de6110c7
Revises: 
Create Date: 2020-09-10 16:46:54.251435

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ba81de6110c7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exporters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('version', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('extractors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('version', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'version')
    )
    op.create_table('importers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('version', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'version')
    )
    op.create_table('licenses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('short_name', sa.String(length=64), nullable=False),
    sa.Column('long_name', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('short_name')
    )
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=1024), nullable=False),
    sa.Column('type', sa.Enum('Institution', 'Institute', 'ResearchGroup', 'Sponsor', 'Other', name='organization_enum'), nullable=False),
    sa.Column('parent_org_id', sa.Integer(), nullable=True),
    sa.Column('state', sa.String(length=64), nullable=True),
    sa.Column('country', sa.String(length=64), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('address', sa.String(length=512), nullable=True),
    sa.ForeignKeyConstraint(['parent_org_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'type', 'parent_org_id')
    )
    op.create_table('persons',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=1024), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('affiliations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('roles', sa.Enum('Author', 'ProjectManager', 'Researcher', 'ContactPerson', 'PrincipalInvestigator', 'CoPrincipalInvestigator', 'Other', name='affiliation_enum'), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('person_id', 'org_id', 'roles')
    )
    op.create_table('person_metadata',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('value', sa.String(length=1024), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('person_id', 'name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('person_id')
    )
    op.create_table('artifacts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.Enum('dataset', 'executable', 'methodology', 'metrics', 'priorwork', 'publication', 'hypothesis', 'code', 'domain', 'supportinginfo', name='artifact_enum'), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=1024), nullable=False),
    sa.Column('ext_id', sa.String(length=512), nullable=False),
    sa.Column('title', sa.String(length=1024), nullable=False),
    sa.Column('name', sa.String(length=1024), nullable=True),
    sa.Column('ctime', sa.DateTime(), nullable=False),
    sa.Column('mtime', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(length=65535), nullable=True),
    sa.Column('license_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('importer_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['importer_id'], ['importers.id'], ),
    sa.ForeignKeyConstraint(['license_id'], ['licenses.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['artifacts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('owner_id', 'url', 'version')
    )
    op.create_table('user_authorizations',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('roles', sa.Enum('Uploader', 'Editor', 'Curator', name='user_authorization_role_enum'), nullable=False),
    sa.Column('scope', sa.Enum('Org', 'Artifact', name='user_authorization_scope_enum'), nullable=False),
    sa.Column('scoped_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_id', 'roles', 'scope', 'scoped_id')
    )
    op.create_table('artifact_affiliations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artifact_id', sa.Integer(), nullable=False),
    sa.Column('affiliation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['affiliation_id'], ['affiliations.id'], ),
    sa.ForeignKeyConstraint(['artifact_id'], ['artifacts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('artifact_id', 'affiliation_id')
    )
    op.create_table('artifact_curations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artifact_id', sa.Integer(), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.String(length=1024), nullable=True),
    sa.Column('opdata', sa.String(length=4096), nullable=False),
    sa.Column('curator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['artifact_id'], ['artifacts.id'], ),
    sa.ForeignKeyConstraint(['curator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('artifact_files',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artifact_id', sa.Integer(), nullable=True),
    sa.Column('parent_file_id', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(length=512), nullable=False),
    sa.Column('filetype', sa.String(length=128), nullable=False),
    sa.Column('content', sa.LargeBinary(), nullable=True),
    sa.Column('size', sa.BigInteger(), nullable=True),
    sa.Column('mtime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['artifact_id'], ['artifacts.id'], ),
    sa.ForeignKeyConstraint(['parent_file_id'], ['artifact_files.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('artifact_id', 'parent_file_id', 'url')
    )
    op.create_table('artifact_funding',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artifact_id', sa.Integer(), nullable=False),
    sa.Column('funding_org_id', sa.Integer(), nullable=False),
    sa.Column('grant_number', sa.String(length=128), nullable=False),
    sa.Column('grant_url', sa.String(length=256), nullable=True),
    sa.Column('grant_title', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['artifact_id'], ['artifacts.id'], ),
    sa.ForeignKeyConstraint(['funding_org_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('artifact_id', 'funding_org_id', 'grant_number')
    )
    op.create_table('artifact_metadata',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artifact_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('value', sa.String(length=1024), nullable=False),
    sa.ForeignKeyConstraint(['artifact_id'], ['artifacts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'artifact_id')
    )
    op.create_table('artifact_publications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artifact_id', sa.Integer(), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.String(length=1024), nullable=True),
    sa.Column('publisher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['artifact_id'], ['artifacts.id'], ),
    sa.ForeignKeyConstraint(['publisher_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('artifact_relationships',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artifact_id', sa.Integer(), nullable=True),
    sa.Column('relation', sa.Enum('cites', 'supplements', 'continues', 'references', 'documents', 'compiles', name='artifact_relationship_enum'), nullable=True),
    sa.Column('related_artifact_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['artifact_id'], ['artifacts.id'], ),
    sa.ForeignKeyConstraint(['related_artifact_id'], ['artifacts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('artifact_id', 'relation', 'related_artifact_id')
    )
    op.create_table('artifact_releases',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artifact_id', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(length=512), nullable=True),
    sa.Column('author_login', sa.String(length=128), nullable=True),
    sa.Column('author_email', sa.String(length=128), nullable=True),
    sa.Column('author_name', sa.String(length=128), nullable=True),
    sa.Column('tag', sa.String(length=256), nullable=True),
    sa.Column('title', sa.String(length=1024), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['artifact_id'], ['artifacts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('artifact_tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artifact_id', sa.Integer(), nullable=True),
    sa.Column('tag', sa.String(length=256), nullable=False),
    sa.ForeignKeyConstraint(['artifact_id'], ['artifacts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tag', 'artifact_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('artifact_tags')
    op.drop_table('artifact_releases')
    op.drop_table('artifact_relationships')
    op.drop_table('artifact_publications')
    op.drop_table('artifact_metadata')
    op.drop_table('artifact_funding')
    op.drop_table('artifact_files')
    op.drop_table('artifact_curations')
    op.drop_table('artifact_affiliations')
    op.drop_table('user_authorizations')
    op.drop_table('artifacts')
    op.drop_table('users')
    op.drop_table('person_metadata')
    op.drop_table('affiliations')
    op.drop_table('persons')
    op.drop_table('organizations')
    op.drop_table('licenses')
    op.drop_table('importers')
    op.drop_table('extractors')
    op.drop_table('exporters')
    # ### end Alembic commands ###
